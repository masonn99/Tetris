//
// Created by Mason Naung on 3/8/22.
//
//referenced javilop.com/gamedev/tetris-tutorial-in-c-platform-independent
//-focused-in-game-logic-for-beginners/
#include "pieces.hxx"

// TODO: change name
// in order: type, rotation, horizontal, vertical
const char Piece_data [7][4][5][5] =
        {
                // Square
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 2, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 2, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 2, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 2, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        }
                },

                // I
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 2, 1, 1},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 2, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {1, 1, 2, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 2, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                }
                ,
                // L
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 2, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 2, 1, 0},
                                {0, 1, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 2, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 1, 0},
                                {0, 1, 2, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                },
                // L mirrored
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 2, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 0, 0, 0},
                                {0, 1, 2, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 2, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 2, 1, 0},
                                {0, 0, 0, 1, 0},
                                {0, 0, 0, 0, 0}
                        }
                },
                // N
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 1, 0},
                                {0, 0, 2, 1, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 2, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 1, 2, 0, 0},
                                {0, 1, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 2, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                },
                // N mirrored
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 2, 1, 0},
                                {0, 0, 0, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 2, 1, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 0, 0, 0},
                                {0, 1, 2, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 1, 2, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                },
                // T
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 2, 1, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 2, 1, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 1, 2, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 1, 2, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                }
        };

// Adjusting for initial position of blocks (since blocks are of different shape)
// In order: type, rotation, position
const int Initial_pieces  [7][4][2] =
        {
                //square
                {
                        {-2, -3},
                        {-2, -3},
                        {-2, -3},
                        {-2, -3}
                },
                // I
                {
                        {-2, -2},
                        {-2, -3},
                        {-2, -2},
                        {-2, -3}
                },
                // L
                {
                        {-2, -3},
                        {-2, -3},
                        {-2, -3},
                        {-2, -2}
                },
                // L mirrored
                {
                        {-2, -3},
                        {-2, -2},
                        {-2, -3},
                        {-2, -3}
                },
                // N
                {
                        {-2, -3},
                        {-2, -3},
                        {-2, -3},
                        {-2, -2}
                },
                // N mirrored
                {
                        {-2, -3},
                        {-2, -3},
                        {-2, -3},
                        {-2, -2}
                },
                // T
                {
                        {-2, -3},
                        {-2, -3},
                        {-2, -3},
                        {-2, -2}
                },
        };

int Pieces::find_b_type (int piece_type, int piece_rotation, int pos_x, int pos_y)
{
    return Piece_data [piece_type][piece_rotation][pos_x][pos_y];
}

int Pieces::find_initial_x (int piece_type, int piece_rotation)
{
    return Initial_pieces [piece_type][piece_rotation][0];
}

int Pieces::find_initial_y (int piece_type, int piece_rotation)
{
    return Initial_pieces [piece_type][piece_rotation][1];
}